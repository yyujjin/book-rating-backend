name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 자동 실행

jobs:
  build:
    runs-on: ubuntu-latest  # 우분투 환경에서 실행

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # GitHub 리포지토리에서 코드 체크아웃

      - name: Set up JDK 17
        uses: actions/setup-java@v2  # Java 17을 설치하고, Java 개발 환경을 준비
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: permission for Gradle
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build  # Gradle 빌드 실행

#      - name: Run tests
#        run: ./gradlew test  # 테스트 실행

      - name: Build Docker image
        run: docker build . -t book-rating  # Docker 이미지 빌드

      - name: Push Docker image to Docker Hub
        run: |
          docker tag book-rating yyujjin1204/book-rating:v2
          docker push yyujjin1204/book-rating:v2

  deploy:
    needs: build  # 'build' 작업이 완료된 후 실행
    runs-on: ubuntu-latest  # 배포 작업도 우분투 환경에서 실행

    steps:
      - name: Set up SSH private key
        run: |
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
            chmod 400 private_key.pem  # SSH 키 파일의 권한 설정

      - name: Pull Docker image from Docker Hub to EC2ㅎ
        run: |
          ssh -i private_key.pem ec2-user@13.125.231.39 "sudo docker pull yyujjin1204/book-rating:v2"

      - name: Stop & remove existing container (if exists)
        run: |
          ssh -i private_key.pem ec2-user@13.125.231.39 "sudo docker stop bookrating_v2 || true && sudo docker rm bookrating_v2 || true"

      - name: Run Docker container on EC2
        run: |
          ssh -i private_key.pem ec2-user@13.125.231.39 "sudo docker run --cpus='.3' --name bookrating_v2 --network app-network -p 8080:8080 -e DB_URL='jdbc:mysql://bookdb:3306/bookrating?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true' -d yyujjin1204/book-rating:v2"
